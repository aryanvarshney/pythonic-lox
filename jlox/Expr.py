# Generated by tool/GenerateAst.py
from abc import ABC
from Token import Token

class Expr(ABC):
    placeholder = None

class Binary(Expr):
    left = None
    operator = None
    right = None
    def __init__(self, left: Expr, operator: Token, right: Expr):
        self.left = left
        self.operator = operator
        self.right = right

class Grouping(Expr):
    expression = None
    def __init__(self, expression: Expr):
        self.expression = expression

class Literal(Expr):
    value = None
    def __init__(self, value):
        self.value = value

class Unary(Expr):
    operator = None
    right = None
    def __init__(self, operator: Token, right: Expr):
        self.operator = operator
        self.right = right

